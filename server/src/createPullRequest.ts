import { Octokit } from "@octokit/core";

const logColor = '#EF476F';

const GH_AUTH_TOKEN = '';
const octokit = new Octokit({ auth: GH_AUTH_TOKEN });
const owner = 'inkblotty';
const repo = 'lizard-buddy';
const baseBranch = 'main';

const nowDate = new Date();
const now = `${nowDate.getFullYear()}-${nowDate.getMonth() + 1}-${nowDate.getDate()} at ${nowDate.getUTCHours()}:${nowDate.getUTCMinutes()} UTC`;
const backupTitle = `Generated Lizard Buddy PR`;
const backupBody = `Generated by Lizard Buddy Manual Test at ${now}`;

interface PROptions {
  /**
   * Title of your PR
   */
  title?: string;
  /**
   * Describe your PR
   */
  body?: string;
  /**
   * The branch name you're submitting a PR from
   */
  head: string;
}
const createPR = async (options: PROptions): Promise<any> => {
  const { title = backupTitle, body = backupBody, head } = options;
  try {
    const fullBody = !body?.includes(now) ? `${body}\n\n${now}` : body;
    console.log('%c\nSubmitting your PR to lizard-buddy repo...', { color: logColor })
    return await octokit.request(
      `POST /repos/{owner}/{repo}/pulls`, { owner, repo, title, body: fullBody, head, base: baseBranch }
    );
  } catch (err) {
    // log why it failed somewhere
    throw err;
  }
}
export default createPR;
